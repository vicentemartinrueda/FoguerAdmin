// <auto-generated />
using System;
using Database.General.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoguerAppApi.Migrations
{
    [DbContext(typeof(FoguerAppDbContext))]
    [Migration("20200229163949_RelationshipBugFixed")]
    partial class RelationshipBugFixed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.General.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Database.General.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 2, 29, 17, 39, 49, 148, DateTimeKind.Local).AddTicks(5833),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User",
                            Priority = 10,
                            UpdateDate = new DateTime(2020, 2, 29, 17, 39, 49, 151, DateTimeKind.Local).AddTicks(3195)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 2, 29, 17, 39, 49, 151, DateTimeKind.Local).AddTicks(4046),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Manager",
                            Priority = 1,
                            UpdateDate = new DateTime(2020, 2, 29, 17, 39, 49, 151, DateTimeKind.Local).AddTicks(4073)
                        });
                });

            modelBuilder.Entity("Database.General.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activated = true,
                            CreationDate = new DateTime(2020, 2, 29, 17, 39, 49, 154, DateTimeKind.Local).AddTicks(477),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vicente",
                            Nif = "53244606C",
                            ReleaseDate = new DateTime(2020, 2, 29, 17, 39, 49, 153, DateTimeKind.Local).AddTicks(9063),
                            RoleId = 2,
                            Surname = "Martín Rueda",
                            UpdateDate = new DateTime(2020, 2, 29, 17, 39, 49, 154, DateTimeKind.Local).AddTicks(1098),
                            UserName = "santofrost"
                        },
                        new
                        {
                            Id = 2,
                            Activated = true,
                            CreationDate = new DateTime(2020, 2, 29, 17, 39, 49, 154, DateTimeKind.Local).AddTicks(1812),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Felipe",
                            Nif = "12345678Z",
                            ReleaseDate = new DateTime(2020, 2, 29, 17, 39, 49, 154, DateTimeKind.Local).AddTicks(1775),
                            RoleId = 1,
                            Surname = "Del Real Gama",
                            UpdateDate = new DateTime(2020, 2, 29, 17, 39, 49, 154, DateTimeKind.Local).AddTicks(1822),
                            UserName = "user2"
                        });
                });

            modelBuilder.Entity("Database.General.Models.Post", b =>
                {
                    b.HasOne("Database.General.Models.User", "Creator")
                        .WithMany("Posts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.General.Models.User", b =>
                {
                    b.HasOne("Database.General.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
