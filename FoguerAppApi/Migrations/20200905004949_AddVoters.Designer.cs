// <auto-generated />
using System;
using Database.General.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoguerAppApi.Migrations
{
    [DbContext(typeof(FoguerAppDbContext))]
    [Migration("20200905004949_AddVoters")]
    partial class AddVoters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.General.Models.OptionUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("UserId");

                    b.ToTable("OptionUser");
                });

            modelBuilder.Entity("Database.General.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(2832),
                            CreatorId = 1,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subtitle = "Subtítulo 1",
                            Text = "Texto 1",
                            Title = "Título 1",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(3232)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(3686),
                            CreatorId = 1,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subtitle = "Subtítulo 2",
                            Text = "Texto 2",
                            Title = "Título 2",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(3711)
                        });
                });

            modelBuilder.Entity("Database.General.Models.PostComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PostId");

                    b.ToTable("PostComment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(5368),
                            CreatorId = 1,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "Genial Post",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(5751)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(6157),
                            CreatorId = 2,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "Fantástico Post",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(6179)
                        });
                });

            modelBuilder.Entity("Database.General.Models.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Proposal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(8565),
                            CreatorId = 1,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subtitle = "Subtítulo 1",
                            Text = "Texto 1",
                            Title = "Color de las camisetas",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(8945)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(9378),
                            CreatorId = 1,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subtitle = "Subtítulo 2",
                            Text = "Texto 2",
                            Title = "Título 2",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(9401)
                        });
                });

            modelBuilder.Entity("Database.General.Models.ProposalComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProposalId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ProposalId");

                    b.ToTable("ProposalComment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(1027),
                            CreatorId = 1,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "Genial Proposal",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(1399)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(1868),
                            CreatorId = 2,
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "Fantástico Proposal",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(1892)
                        });
                });

            modelBuilder.Entity("Database.General.Models.ProposalOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.ToTable("ProposalOption");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(3484),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProposalId = 1,
                            Text = "Rosa",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(3857)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(4258),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProposalId = 1,
                            Text = "Azul",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 377, DateTimeKind.Local).AddTicks(4282)
                        });
                });

            modelBuilder.Entity("Database.General.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 371, DateTimeKind.Local).AddTicks(1403),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User",
                            Priority = 10,
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 374, DateTimeKind.Local).AddTicks(794)
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 374, DateTimeKind.Local).AddTicks(1375),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Manager",
                            Priority = 1,
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 374, DateTimeKind.Local).AddTicks(1401)
                        });
                });

            modelBuilder.Entity("Database.General.Models.SharedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("SharedFile");
                });

            modelBuilder.Entity("Database.General.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activated = true,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 375, DateTimeKind.Local).AddTicks(9457),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vicente",
                            Nif = "53244606C",
                            ReleaseDate = new DateTime(2020, 9, 5, 2, 49, 49, 375, DateTimeKind.Local).AddTicks(8694),
                            RoleId = 2,
                            Surname = "Martín Rueda",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 375, DateTimeKind.Local).AddTicks(9855),
                            UserName = "santofrost"
                        },
                        new
                        {
                            Id = 2,
                            Activated = true,
                            CreationDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(379),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Felipe",
                            Nif = "12345678Z",
                            ReleaseDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(347),
                            RoleId = 1,
                            Surname = "Del Real Gama",
                            UpdateDate = new DateTime(2020, 9, 5, 2, 49, 49, 376, DateTimeKind.Local).AddTicks(391),
                            UserName = "user2"
                        });
                });

            modelBuilder.Entity("Database.General.Models.OptionUser", b =>
                {
                    b.HasOne("Database.General.Models.ProposalOption", "Option")
                        .WithMany("Voters")
                        .HasForeignKey("OptionId");

                    b.HasOne("Database.General.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Database.General.Models.Post", b =>
                {
                    b.HasOne("Database.General.Models.User", "Creator")
                        .WithMany("Posts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.General.Models.PostComment", b =>
                {
                    b.HasOne("Database.General.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.General.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("Database.General.Models.Proposal", b =>
                {
                    b.HasOne("Database.General.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.General.Models.ProposalComment", b =>
                {
                    b.HasOne("Database.General.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.General.Models.Proposal", "Proposal")
                        .WithMany("Comments")
                        .HasForeignKey("ProposalId");
                });

            modelBuilder.Entity("Database.General.Models.ProposalOption", b =>
                {
                    b.HasOne("Database.General.Models.Proposal", "Proposal")
                        .WithMany("Options")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.General.Models.SharedFile", b =>
                {
                    b.HasOne("Database.General.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.General.Models.User", b =>
                {
                    b.HasOne("Database.General.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
